@page "/events"
@using EventManagerFrontend.Components
@using EventManagerFrontend.Models
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject UserState UserState

<PageTitle>Events</PageTitle>

<h3>Events hub</h3>

<p>All the events that happened or will happen</p>

@code {
    private Event[]? events;
    private User loggedInUser;

    protected override async Task OnInitializedAsync()
    {
        string localStorageUserJson = await JsRuntime.InvokeAsync<string>("localStorage.getItem", "loggedInUser");
        if (!string.IsNullOrEmpty(localStorageUserJson))
        {
            loggedInUser = JsonSerializer.Deserialize<User>(localStorageUserJson);
        }
        else
        {
            loggedInUser = null;
        }
        try
        {
            Console.WriteLine("Fetching events...");
            events = await Http.GetFromJsonAsync<Event[]>("/Event/get");

            if (events == null || events.Length == 0)
            {
                Console.WriteLine("No events found.");
            }
            else
            {
                Console.WriteLine($"Fetched {events.Length} events.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching events: {ex.Message}");
        }
    }
}

@if (loggedInUser !=null)
{
    if (loggedInUser.Type.Type == "admin" || loggedInUser.Type.Type == "organizer")
    {
        <button onclick="window.location.href='addevent'" class="button-enabled">Add Event</button>
        
    }
}
else
{
}

@if(events == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Location</th>
                <th>Organizer</th>
                <th>Description</th>
                <th>Price</th>
                <th>Type</th>
                <th>Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var singleEvent in events)
            {
                <tr>
                    <th>@singleEvent.Title</th>
                    <th>@singleEvent.Location</th>
                    <th>@singleEvent.Organizer.Name</th>
                    <th>@singleEvent.Description</th>
                    <th>@singleEvent.Price</th>
                    <th>@singleEvent.Type.Type</th>
                    <th>@singleEvent.Date</th>
                    <th style="color: @(singleEvent.Status == "Closed" ? "red" : singleEvent.Status == "Sold-out" ? "orange" : "green")">@singleEvent.Status</th>
                    <th>
                        @if (singleEvent.Status == "Available" )
                        {
                            if(loggedInUser!=null)
                            {
                                @* <button onclick="window.location.href='buyticket/@(singleEvent.Id)'" class="button-enabled">Cumpără bilet</button> *@
                                <button onclick="window.location.href='buyticket?event=@(System.Web.HttpUtility.UrlEncode(JsonSerializer.Serialize(singleEvent)))'" class="button-enabled">Buy ticket</button>
                            }
                            else
                            {
                                <button class="button-disabled" disabled>Must log in</button>
                            }

                        }
                        else
                        {
                            <button class="button-disabled" disabled>Unavailable</button>
                        }
                    </th>
                </tr>
            }

        </tbody>
    </table>
}

