@using System.Text.Json
@using EventManagerFrontend.Models
@inject IJSRuntime JsRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EventManagerFrontend</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="events">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Events
            </NavLink>
        </div>
        @if(loggedInUser!=null){
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tickets">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> My Tickets
            </NavLink>
        </div>}
    </nav>
</div>

@code {
    private User loggedInUser;
    protected override async Task OnInitializedAsync()
    {
        string localStorageUserJson = await JsRuntime.InvokeAsync<string>("localStorage.getItem", "loggedInUser");
        if (!string.IsNullOrEmpty(localStorageUserJson))
        {
            loggedInUser = JsonSerializer.Deserialize<User>(localStorageUserJson);
        }
        else
        {
            loggedInUser = null;
        }
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
